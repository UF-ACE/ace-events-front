apiVersion: apps/v1
kind: Deployment
metadata:
  name: events-front
  namespace: ace-official
  labels:
    app: events
    tier: frontend
    service: web
spec:
  replicas: 2
  revisionHistoryLimit: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  selector:
    matchLabels:
      app: events-front
  template:
    metadata:
      labels:
        app: events-front
        tier: frontend
        service: web
    spec:
      containers:
        - name: events-front
          image: quay.io/uface/events-front:0.8.0
          ports:
            - containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 3
            periodSeconds: 3
          lifecycle:
            preStop:
              exec:
                command: ["/usr/sbin/nginx","-s","quit"]
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: events-back
  namespace: ace-official
  labels:
    app: events
    tier: backend
    service: web
spec:
  replicas: 1
  revisionHistoryLimit: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  selector:
    matchLabels:
      app: events-back
  template:
    metadata:
      labels:
        app: events-back
        tier: backend
        service: web
    spec:
      containers:
        - name: events-back
          image: quay.io/uface/events-back:0.2.3
          ports:
            - containerPort: 8080
              protocol: TCP
          env:
            - name: PG_HOST
              value: event-db
            - name: PG_DATABASE
              value: events
            - name: PG_USERNAME
              valueFrom:
                secretKeyRef:
                  name: event-db-auth
                  key: POSTGRES_USER
            - name: PG_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: event-db-auth
                  key: POSTGRES_PASSWORD
            - name: SECRET_KEY_BASE
              valueFrom:
                secretKeyRef:
                  name: events-back
                  key: SECRET_KEY_BASE
            - name: OP_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: events-back
                  key: OP_CLIENT_ID
            - name: OP_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: events-back
                  key: OP_SECRET_KEY
            - name: OP_REDIRECT_URI
              value: https://events.uf-ace.com/auth/ace_cloud/callback
      initContainers:
        - name: events-db-init
          image: quay.io/uface/events-back:0.2.3
          command: ["rails", "db:prepare"]
          env:
            - name: PG_HOST
              value: event-db
            - name: PG_DATABASE
              value: events
            - name: PG_USERNAME
              valueFrom:
                secretKeyRef:
                  name: event-db-auth
                  key: POSTGRES_USER
            - name: PG_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: event-db-auth
                  key: POSTGRES_PASSWORD 
            - name: SECRET_KEY_BASE
              valueFrom:
                secretKeyRef:
                  name: events-back
                  key: SECRET_KEY_BASE
            - name: OP_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: events-back
                  key: OP_CLIENT_ID
            - name: OP_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: events-back
                  key: OP_SECRET_KEY
            - name: OP_REDIRECT_URI
              value: https://events.uf-ace.com/auth/ace_cloud/callback
---
apiVersion: v1
kind: Service
metadata:
  name: events-front
  namespace: ace-official
  labels:
    service: web
spec:
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
      name: http
  selector:
    app: events-front
---
apiVersion: v1
kind: Service
metadata:
  name: events-back
  namespace: ace-official
  labels:
    service: web
spec:
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app: events-back
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: events
  namespace: ace-official
  labels:
    service: web
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "Content-Security-Policy: default-src 'none'; script-src 'self'; style-src 'self'; img-src 'self' data:; connect-src 'self'; font-src 'self'; base-uri 'none'; form-action 'self'; frame-ancestors 'none'; navigate-to https:; block-all-mixed-content";
spec:
  tls:
    - hosts:
        - events.uf-ace.com
      secretName: events-tls
  rules:
    - host: events.uf-ace.com
      http:
        paths:
          - path: /auth
            backend:
              serviceName: events-back
              servicePort: 80
          - path: /api
            backend:
              serviceName: events-back
              servicePort: 80
          - path: /
            backend:
              serviceName: events-front
              servicePort: 80